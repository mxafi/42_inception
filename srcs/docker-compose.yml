version: "3.8"

name: inception

services:
  nginx:
    container_name: nginx
    image: nginx:42
    build:
      context: ./requirements/nginx
      args:
        - ALPINE_PENULTIMATE_VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
        - NGINX_HOST_DOMAIN=${NGINX_HOST_DOMAIN}
    init: true
    ports:
      - 443:443
      - 8000:8000
    volumes:
      - wordpress:/var/www/html
      - nginx-logs:/var/log/nginx
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    image: mariadb:42
    build:
      context: ./requirements/mariadb
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
        - DATABASE=${MARIADB_DATABASE}
        - USER=${MARIADB_USER}
        - PASSWORD=${MARIADB_PASSWORD}
        - ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    init: true
    volumes:
      - mariadb:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      start_period: 1m
      start_interval: 5s
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  wordpress:
    container_name: wordpress
    image: wordpress:42
    build:
      context: ./requirements/wordpress
      args:
        - ALPINE_PENULTIMATE_VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
        - HOST_DOMAIN=${NGINX_HOST_DOMAIN}
        - DB_HOST=${MARIADB_HOST}
        - DB_NAME=${MARIADB_DATABASE}
        - DB_USER=${MARIADB_USER}
        - DB_PASSWORD=${MARIADB_PASSWORD}
        - SITE_TITLE=${WORDPRESS_TITLE}
        - ADMIN_USER=${WORDPRESS_ADMIN_USER}
        - ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
        - ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
        - EDITOR_USER=${WORDPRESS_EDITOR_USER}
        - EDITOR_PASSWORD=${WORDPRESS_EDITOR_PASSWORD}
        - EDITOR_EMAIL=${WORDPRESS_EDITOR_EMAIL}
        - REDIS_HOST=${WORDPRESS_REDIS_HOST}
        - REDIS_PREFIX=${WORDPRESS_REDIS_PREFIX}
        - AUTH_KEY=${WORDPRESS_AUTH_KEY}
        - SECURE_AUTH_KEY=${WORDPRESS_SECURE_AUTH_KEY}
        - LOGGED_IN_KEY=${WORDPRESS_LOGGED_IN_KEY}
        - NONCE_KEY=${WORDPRESS_NONCE_KEY}
        - AUTH_SALT=${WORDPRESS_AUTH_SALT}
        - SECURE_AUTH_SALT=${WORDPRESS_SECURE_AUTH_SALT}
        - LOGGED_IN_SALT=${WORDPRESS_LOGGED_IN_SALT}
        - NONCE_SALT=${WORDPRESS_NONCE_SALT}
    init: true
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - wordpress:/var/www/html
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:42
    build:
      context: ./requirements/bonus/redis
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
    init: true
    restart: unless-stopped

  vsftpd:
    container_name: vsftpd
    image: vsftpd:42
    build:
      context: ./requirements/bonus/vsftpd
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
        - FTP_USER=${VSFTPD_USERNAME}
        - FTP_PASS=${VSFTPD_PASSWORD}
    init: true
    ports:
      - 20-21:20-21
      - 30000-30099:30000-30099
    volumes:
      - wordpress:/var/www/html
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer:42
    build:
      context: ./requirements/bonus/adminer
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
    init: true
    restart: unless-stopped
  
  hugo:
    container_name: hugo
    image: hugo:42
    build:
      context: ./requirements/bonus/hugo
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
        - SITE_BASEURL=${HUGO_SITE_BASEURL}
    init: true
    ports:
      - 8001:80
    restart: unless-stopped

  goaccess:
    container_name: goaccess
    image: goaccess:42
    build:
      context: ./requirements/bonus/goaccess
      args:
        - VERSION_TAG=${ALPINE_PENULTIMATE_VERSION_TAG}
    init: true
    volumes:
      - nginx-logs:/var/log/nginx
    restart: unless-stopped

volumes:
  wordpress:
    driver: local
    driver_opts:
      device: ${DATA_ROOT}/wordpress
      o: bind
      type: none
  mariadb:
    driver: local
    driver_opts:
      device: ${DATA_ROOT}/mariadb
      o: bind
      type: none
  nginx-logs:
    driver: local
    driver_opts:
      device: ${DATA_ROOT}/nginx-logs
      o: bind
      type: none

networks:
  default:
    name: inception-net
